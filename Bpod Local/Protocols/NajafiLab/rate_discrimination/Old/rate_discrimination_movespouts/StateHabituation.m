function StateHabituation(S, OutputActionArgInitCue, ...
    CenterValveTime, visStim, VisStimDuration, audStim, OutputActionsPreGoCueDelay, ITI)

    sma = NewStateMatrix(); % Assemble state matrix

    % testing behavior port4in port4out for use as sync signal from camera
    sma = SetCondition(sma, 3, 'Port4', 1); % Condition 3: Sync signal high
    sma = SetCondition(sma, 4, 'Port4', 0); % Condition 4: Sync signal low
    sma = SetCondition(sma, 5, 'Port2', 1); % Condition 5: center port is high (licking)

    sma = AddState(sma, 'Name', 'Start', ...
        'Timer', 0,...
        'StateChangeConditions', {'Tup', 'InitCue'},...
        'OutputActions', {'HiFi1','*'});

    sma = AddState(sma, 'Name', 'InitCue', ...
        'Timer', S.GUI.InitCueDuration_s,...
        'StateChangeConditions', {'Tup', 'InitReward'},...
        'OutputActions', OutputActionArgInitCue);

    sma = AddState(sma, 'Name', 'InitReward', ...
        'Timer', CenterValveTime,...
        'StateChangeConditions', {'Tup', 'InitWindow'},...
        'OutputActions', {'Valve2', 1});

    sma = AddState(sma, 'Name', 'InitWindow', ...
        'Timer', S.GUI.InitWindowTimeout_s,...
        'StateChangeConditions', {'Tup', 'InitCueAgain', 'Port2In', 'PreVisStimDelay'},...         
        'OutputActions', {});

    sma = AddState(sma, 'Name', 'InitCueAgain', ...
        'Timer', 0,...
        'StateChangeConditions', {'Tup', 'InitCue'},...         
        'OutputActions', {});

    sma = AddState(sma, 'Name', 'PreVisStimDelay', ...
        'Timer', S.GUI.PreVisStimDelay_s,...
        'StateChangeConditions', {'Tup', 'VisStimTrigger'},...
        'OutputActions', {});    

    sma = AddState(sma, 'Name', 'VisStimTrigger', ...
        'Timer', 0,...
        'StateChangeConditions', {'BNC1High', 'AudStimTrigger'},...
        'OutputActions', visStim);

    sma = AddState(sma, 'Name', 'AudStimTrigger', ...
        'Timer', VisStimDuration,...
        'StateChangeConditions', {'Tup', 'PreGoCueDelay'},...
        'OutputActions', audStim);
 
    sma = AddState(sma, 'Name', 'PreGoCueDelay', ...
        'Timer', S.GUI.PreGoCueDelay_s,...
        'StateChangeConditions', {'Tup', 'ExtraStimDurPostRew_Naive'},...         
        'OutputActions', OutputActionsPreGoCueDelay);

    sma = AddState(sma, 'Name', 'ExtraStimDurPostRew_Naive', ...
        'Timer', S.GUI.ExtraStimDurPostRew_Naive_s,...
        'StateChangeConditions', {'Tup', 'HabituationReward'},...
        'OutputActions', {});

    sma = AddState(sma, 'Name', 'HabituationReward', ...
        'Timer', CenterValveTime,...
        'StateChangeConditions', {'Tup', 'ITI'},...
        'OutputActions', {'Valve2', 1});

    sma = AddState(sma, 'Name', 'ITI', ...
        'Timer', ITI,...
        'StateChangeConditions', {'Tup', '>exit'},...
        'OutputActions', {'SoftCode', 254, 'HiFi1', 'X'});   

    SendStateMachine(sma); % Send the state matrix to the Bpod device
end