function StateHabituation(S, CorrectPort, IncorrectPort, CorrectLick, IncorrectLick, InitCue_Tup_NextState, OutputActionArgInitCue, ...
    CenterValveTime, visStim, stimDuration, VisualStimulusStateChangeConditions, audStim, ...
    VisStimDuration, wait_dur, CenterReward_NextSate, CenterReward_OutputActions, OutputActionsPreGoCueDelay, ...
    OutputActionsEarlyChoice, GoCue_Tup_NextState, OutputActionArgGoCue, ValveTime, Valve, ...
    WindowChoice_StateChangeConditions, OutputActionsWindowChoice, Reward_Tup_NextState, PunishSetup_Tup_NextState, ...
    OutputActionsPunishSetup, OutputActionArgIncorrect, TimeOutPunish, HabituationEnd, ITI)

    sma = NewStateMatrix(); % Assemble state matrix
    % needs more conditions here when adding difficulty levels
    sma = SetCondition(sma, 1, CorrectPort, 1); % Condition 1: Correct Port is high (licking)
    sma = SetCondition(sma, 2, IncorrectPort, 1); % Condition 2: Incorrect Port is high (licking)

    % testing behavior port4in port4out for use as sync signal from camera
    sma = SetCondition(sma, 3, 'Port4', 1); % Condition 3: Sync signal high
    sma = SetCondition(sma, 4, 'Port4', 0); % Condition 4: Sync signal low
    sma = SetCondition(sma, 5, 'Port2', 1); % Condition 5: center port is high (licking)

    % HiFi
    sma = AddState(sma, 'Name', 'Start', ...
        'Timer', 0,...
        'StateChangeConditions', {'Tup', 'InitCue'},...
        'OutputActions', {'HiFi1','*'});

    % play init cue sound
    sma = AddState(sma, 'Name', 'InitCue', ...
        'Timer', S.GUI.InitCueDuration_s,...
        'StateChangeConditions', {'Tup', InitCue_Tup_NextState},...         
        'OutputActions', OutputActionArgInitCue);

    % naive - center spout reward to condition init licking
    % maybe give this it's own unique valve time?
    sma = AddState(sma, 'Name', 'InitReward', ...
        'Timer', CenterValveTime,...
        'StateChangeConditions', {'Tup', 'InitWindow'},...
        'OutputActions', {'Valve2', 1});

    % outdated comment, update
    % naive - auto go to vis stimulus after playing go cue sound (we still
    %         log DidNotInitiate, but go to vis stim instead of ITI)
    % trained - wait for lick after playing go cue sound
    sma = AddState(sma, 'Name', 'InitWindow', ...
        'Timer', S.GUI.InitWindowTimeout_s,...
        'StateChangeConditions', {'Tup', 'InitCueAgain', 'Port2In', 'PreVisStimDelay', 'Port1In', 'WrongInitiation', 'Port3In', 'WrongInitiation'},...         
        'OutputActions', {});

    sma = AddState(sma, 'Name', 'InitCueAgain', ...
        'Timer', 0,...
        'StateChangeConditions', {'Tup', 'InitCue'},...         
        'OutputActions', {});

    sma = AddState(sma, 'Name', 'WrongInitiation', ...
        'Timer', 0,...
        'StateChangeConditions', {'Tup', 'TimeOutPunish'},...         
        'OutputActions', {});     

    % delay after init before visual stimulus
    % placeholder - not in  use
    sma = AddState(sma, 'Name', 'PreVisStimDelay', ...
        'Timer', S.GUI.PreVisStimDelay_s,...
        'StateChangeConditions', {'Tup', 'VisStimTrigger'},...
        'OutputActions', {});    

    sma = AddState(sma, 'Name', 'VisStimTrigger', ...
        'Timer', 0,...
        'StateChangeConditions', {'BNC1High', 'AudStimTrigger'},...
        'OutputActions', visStim);

    % VisualStimulus : naive and mid-trained
    sma = AddState(sma, 'Name', 'AudStimTrigger', ...
        'Timer', stimDuration,...
        'StateChangeConditions', VisualStimulusStateChangeConditions,...
        'OutputActions', audStim);

    % VisualStimulus; they can side lick (though they wont get reward bc
    % it's before go cue)
    sma = AddState(sma, 'Name', 'VisualStim_AllowedSideLick', ...
        'Timer', VisStimDuration - wait_dur,...
        'StateChangeConditions', {'Tup', 'CenterReward'},...
        'OutputActions', {});

    % Well trained: after the stimulus ends, mouse center licks, then center reward happens.  
    sma = AddState(sma, 'Name', 'CenterReward', ...
        'Timer', CenterValveTime,...
        'StateChangeConditions', {'Tup', CenterReward_NextSate},...
        'OutputActions', CenterReward_OutputActions);    

    % placeholder - not in use
    sma = AddState(sma, 'Name', 'PreGoCueDelay', ...
        'Timer', S.GUI.PreGoCueDelay_s,...
        'StateChangeConditions', {'Tup', 'GoCue'},...         
        'OutputActions', OutputActionsPreGoCueDelay);   

    % also stop video here, there can be small delay even with zero timer
    % when waiting to ITI
    sma = AddState(sma, 'Name', 'EarlyChoice', ...
        'Timer', 0,...
        'StateChangeConditions', {'Tup', 'TimeOutPunish'},...
        'OutputActions', OutputActionsEarlyChoice);

    % well trained - mouse didn't lick center after vis stim during S.GUI.CenterLickWindow_Trained_s
    sma = AddState(sma, 'Name', 'EarlyChoiceDurCenterLick', ...
        'Timer', 0,...
        'StateChangeConditions', {'Tup', 'TimeOutPunish'},...
        'OutputActions', {});

    % play go cue sound
    sma = AddState(sma, 'Name', 'GoCue', ...
        'Timer', S.GUI.GoCueDuration_s,...
        'StateChangeConditions', {'Tup', GoCue_Tup_NextState},...         
        'OutputActions', OutputActionArgGoCue);      

    sma = AddState(sma, 'Name', 'RewardNaive', ...
        'Timer', ValveTime,...
        'StateChangeConditions', {'Tup', 'WindowRewardGrab_Naive'},...
        'OutputActions', {Valve, 1});    
    
    % keep valve open here? no
    sma = AddState(sma, 'Name', 'WindowRewardGrab_Naive', ...
        'Timer', S.GUI.WindowRewardGrabDuration_Naive_s,...
        'StateChangeConditions', {'Tup', 'DidNotChoose', CorrectLick, 'ExtraStimDurPostRew_Naive', 'Condition1', 'ExtraStimDurPostRew_Naive', IncorrectLick, 'PunishSetup', 'Condition2', 'PunishSetup'},...
        'OutputActions', {});
    
    % additional time to associate stimulus with reward
    sma = AddState(sma, 'Name', 'ExtraStimDurPostRew_Naive', ...
        'Timer', S.GUI.ExtraStimDurPostRew_Naive_s,...
        'StateChangeConditions', {'Tup', 'ITI'},...
        'OutputActions', {});
    
    % naive - don't require confirm/choose again loop, log DidNotChoose,
    %         reward from correct spout anyway
    % trained - 
    % well trained - ?
    sma = AddState(sma, 'Name', 'WindowChoice', ...
        'Timer', S.GUI.ChoiceWindow_s,...
        'StateChangeConditions', WindowChoice_StateChangeConditions,...
        'OutputActions', OutputActionsWindowChoice);        
    
    % trained - did not lick center after vis stim for center reward
    sma = AddState(sma, 'Name', 'DidNotLickCenter', ...
        'Timer', 0,...
        'StateChangeConditions', {'Tup', 'TimeOutPunish'},...
        'OutputActions', {});

    % naive - log DidNotChoose, skip confirm/choose again loop, go to
    %         reward correct spout
    % trained - log DidNotChoose, go to ITI
    % well trained - ?
    sma = AddState(sma, 'Name', 'DidNotChoose', ...
        'Timer', 0,...
        'StateChangeConditions', {'Tup', 'TimeOutPunish'},...
        'OutputActions', {});   

    sma = AddState(sma, 'Name', 'CorrectLickInterval', ...
        'Timer', S.GUI.ConfirmLickInterval_s,...
        'StateChangeConditions', {'Tup', 'WindowCorrectChoiceConfirm', IncorrectLick, 'IncorrectLickInterval'},...
        'OutputActions', {});

    sma = AddState(sma, 'Name', 'IncorrectLickInterval', ...
        'Timer', S.GUI.ConfirmLickInterval_s,...
        'StateChangeConditions', {'Tup', 'WindowIncorrectChoiceConfirm', CorrectLick, 'CorrectLickInterval'},...
        'OutputActions', {});

    sma = AddState(sma, 'Name', 'WindowCorrectChoiceConfirm', ...
        'Timer', S.GUI.ChoiceConfirmWindow_s,...
        'StateChangeConditions', {'Tup', 'DidNotConfirm', CorrectLick, 'RewardDelay', IncorrectLick, 'IncorrectLickInterval', 'Condition1', 'RewardDelay', 'Condition2', 'IncorrectLickInterval'},...
        'OutputActions', {});

    sma = AddState(sma, 'Name', 'WindowIncorrectChoiceConfirm', ...
        'Timer', S.GUI.ChoiceConfirmWindow_s,...
        'StateChangeConditions', {'Tup', 'DidNotConfirm', CorrectLick, 'CorrectLickInterval', IncorrectLick, 'PunishSetup', 'Condition1', 'CorrectLickInterval', 'Condition2', 'PunishSetup'},...
        'OutputActions', {});

    sma = AddState(sma, 'Name', 'DidNotConfirm', ...
        'Timer', 0,...
        'StateChangeConditions', {'Tup', 'TimeOutPunish'},...
        'OutputActions', {});

    sma = AddState(sma, 'Name', 'RewardDelay', ...
        'Timer', S.GUI.RewardDelay_s,...
        'StateChangeConditions', {'Tup', 'ITI'},...
        'OutputActions', {});

    sma = AddState(sma, 'Name', 'PunishSetup', ...
        'Timer', 0,...
        'StateChangeConditions', {'Tup', PunishSetup_Tup_NextState},...
        'OutputActions', OutputActionsPunishSetup); % Set white noise waveform

    sma = AddState(sma, 'Name', 'PunishNaive', ...
        'Timer', S.GUI.PunishSoundDuration_s,...
        'StateChangeConditions', {'Tup', 'TimeOutPunish'},...
        'OutputActions', OutputActionArgIncorrect);

    sma = AddState(sma, 'Name', 'Punish', ...
        'Timer', S.GUI.PunishSoundDuration_s,...
        'StateChangeConditions', {'Tup', 'TimeOutPunish'},...
        'OutputActions', OutputActionArgIncorrect);

    sma = AddState(sma, 'Name', 'TimeOutPunish', ...
        'Timer', TimeOutPunish,...
        'StateChangeConditions', {'Tup', 'ITI'},...
        'OutputActions', {});

    sma = AddState(sma, 'Name', 'HabituationExtendWindow', ...
        'Timer', 6,...
        'StateChangeConditions', {'Tup', 'ITI'},...
        'OutputActions', HabituationEnd); % move spouts in

    sma = AddState(sma, 'Name', 'ITI', ...
        'Timer', ITI,...
        'StateChangeConditions', {'Tup', '>exit'},...
        'OutputActions', {'SoftCode', 254, 'HiFi1', 'X'});   

    SendStateMachine(sma); % Send the state matrix to the Bpod device
end